syntax = "proto3";
package bpfd.v1;
option go_package = "github.com/bpfd-dev/clients/gobpfd/v1;v1";

service Bpfd {
    rpc Load (LoadRequest) returns (LoadResponse);
    rpc Unload (UnloadRequest) returns (UnloadResponse);
    rpc List (ListRequest) returns (ListResponse);
    rpc PullBytecode (PullBytecodeRequest) returns (PullBytecodeResponse);
}

message BytecodeImage {
    string url = 1;
    int32 image_pull_policy = 2;
    string username = 3;
    string password = 4;
}

message LoadRequestCommon {
    oneof location {
        BytecodeImage image = 1;
        string file = 2;
    } ;
    string name = 3;
    uint32 program_type = 4;
    map<string,string> metadata = 5;
    map<string, bytes> global_data = 6;
    optional uint32 map_owner_id = 7;
}


message XDPAttachInfo {
    int32 priority = 1;
    string iface = 2;
    int32 position = 3;
    repeated int32 proceed_on = 4;
}

message TCAttachInfo {
    int32 priority = 1;
    string iface = 2;
    int32 position = 3;
    string direction = 4;
    repeated int32 proceed_on = 5;
}

message TracepointAttachInfo {
    string tracepoint = 1;
}

message KprobeAttachInfo {
    string fn_name = 1;
    uint64 offset = 2;
    bool retprobe = 3;
    optional string namespace = 4;
}

message UprobeAttachInfo {
    optional string fn_name = 1;
    uint64 offset = 2;
    string target = 3;
    bool retprobe = 4;
    optional int32 pid = 5;
    optional string namespace = 6;
}

message LoadRequest {
    LoadRequestCommon common = 1;
    oneof attach_info {
        XDPAttachInfo xdp_attach_info = 2;
        TCAttachInfo tc_attach_info = 3;
        TracepointAttachInfo tracepoint_attach_info = 4;
        KprobeAttachInfo kprobe_attach_info = 5;
        UprobeAttachInfo uprobe_attach_info = 6;
    }
};

message LoadResponse {
    uint32 id = 1;
}

message UnloadRequest {
    uint32 id = 1;
}

message UnloadResponse {}

message ListRequest {
    optional uint32 program_type = 1;
    optional bool bpfd_programs_only = 2;
    map<string, string> match_metadata = 3;
}

message ListResponse {
  message ListResult {
    uint32 id = 1;
    string name = 2;
    oneof location {
        BytecodeImage image = 3;
        string file = 4;
    } ;
    uint32 program_type = 5;
    map<string, bytes> global_data = 6;
    optional uint32 map_owner_id = 7;
    string map_pin_path = 8;
    repeated string map_used_by = 9;
    oneof attach_info {
        XDPAttachInfo xdp_attach_info = 10;
        TCAttachInfo tc_attach_info = 11;
        TracepointAttachInfo tracepoint_attach_info = 12;
        KprobeAttachInfo kprobe_attach_info = 13;
        UprobeAttachInfo uprobe_attach_info = 14;
    }
    map<string, string> metadata = 15;
    string loaded_at = 16;
    string tag = 17;
    bool gpl_compatible = 18;
    repeated uint32 map_ids = 19;
    uint32 btf_id = 20;
    uint32 bytes_xlated = 21;
    bool jited = 22;
    uint32 bytes_jited = 23;
    uint32 bytes_memlock = 24;
    uint32 verified_insns = 25;
  } 
  repeated ListResult results = 26;
}

message PullBytecodeRequest {
    BytecodeImage image = 1;
}

message PullBytecodeResponse {}
